import mongoService from '@/services/mongoService';
import { MachineStatus, AppRole } from '@/models';

// Nota: Este script √© para uso no backend com MongoDB real.
// No frontend, use mockMongoService atrav√©s de initializeData.ts

/**
 * Script para inicializar o MongoDB com dados padr√£o
 * Execute este script ap√≥s a primeira configura√ß√£o
 */
async function initializeMongoDB() {
  try {
    console.log('üöÄ Iniciando configura√ß√£o do MongoDB...');
    
    // Conectar ao banco
    await mongoService.connect();
    console.log('‚úÖ Conectado ao MongoDB Atlas');
    
    // Inicializar dados padr√£o (motivos de parada)
    await mongoService.initializeDefaultData();
    console.log('‚úÖ Dados padr√£o inicializados');
    
    // TODO: Implementar cria√ß√£o de m√°quinas com Mongoose no backend
    console.log('‚ÑπÔ∏è Este script deve ser executado no backend com MongoDB real');
    console.log('‚ÑπÔ∏è No frontend, use mockMongoService atrav√©s de initializeData.ts');
    
    // Criar usu√°rio administrador padr√£o se n√£o existir
    try {
      await mongoService.createUser(
        'admin@sistema-oee.com',
        'admin123',
        'Administrador do Sistema'
      );
      console.log('‚úÖ Usu√°rio administrador criado: admin@sistema-oee.com / admin123');
    } catch (error) {
      if (error instanceof Error && error.message.includes('j√° existe')) {
        console.log('‚ÑπÔ∏è Usu√°rio administrador j√° existe');
      } else {
        console.error('‚ùå Erro ao criar usu√°rio administrador:', error);
      }
    }
    
    console.log('üéâ Inicializa√ß√£o do MongoDB conclu√≠da com sucesso!');
    console.log('\nüìã Resumo:');
    console.log('- Banco de dados: MongoDB Atlas');
    console.log('- Modelos: Criados e configurados');
    console.log('- Dados padr√£o: Inicializados');
    console.log('- Usu√°rio admin: admin@sistema-oee.com / admin123');
    console.log('\nüöÄ O sistema est√° pronto para uso!');
    
  } catch (error) {
    console.error('‚ùå Erro durante a inicializa√ß√£o:', error);
    process.exit(1);
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  initializeMongoDB()
    .then(() => process.exit(0))
    .catch((error) => {
      console.error('‚ùå Falha na inicializa√ß√£o:', error);
      process.exit(1);
    });
}

export default initializeMongoDB;